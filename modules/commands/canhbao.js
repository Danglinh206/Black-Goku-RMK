const fs = require("fs-extra");
module.exports.config = {
    name: "canhbao",
    version: "1.0.0",
    hasPermssion: 1, 
    credits: "Niio-team (CThinh)",
    description: "C·∫£nh b√°o v√† kick ng∆∞·ªùi d√πng ra kh·ªèi nh√≥m",
    commandCategory: "Nh√≥m",
    usages: "[c√°ch d√πng]",
    cooldowns: 0
};

module.exports.run = async function({ api, event, args, Users, permssion }) {
    let path = __dirname + "/cache/data/canhbao.json";
    if (!fs.existsSync(__dirname + "/cache/data")) fs.mkdirSync(__dirname + "/cache/data");
    var data = {};
    try {
        data = JSON.parse(fs.readFileSync(path));
    } catch (err) {
        fs.writeFileSync(path, JSON.stringify(data));
    }
    if (args[0] == "list") {
        let threadID = event.threadID;
        let list = [];
        for (let id in data) {
            if (data[id].threadID == threadID) {
                let name = (await Users.getData(id)).name;
                let warns = data[id].warns;
                let reason = data[id].reason.join(", "); 
                let time = data[id].time;
                let info = `üë§ ${name} vi ph·∫°m ${warns} l·∫ßn\nüìù N·ªôi dung: ${reason}\n‚è∞ Th·ªùi gian: ${time}`;
                list.push(info);
            }
        }
        if (list.length == 0) return api.sendMessage("‚ùé Kh√¥ng c√≥ ai b·ªã c·∫£nh b√°o trong nh√≥m n√†y!", event.threadID, event.messageID);
        else {
            let msg = "Danh s√°ch c·∫£nh b√°o trong nh√≥m:\n\n";
            for (let i = 0; i < list.length; i++) {
                msg += `${i + 1}. ${list[i]}\n\n`;
            }
            return api.sendMessage(msg, event.threadID, event.messageID);
        }
    }
    else if (args[0] == "reset") {
        if (permssion !== 2 && !global.config.ADMINBOT.includes(event.senderID)) return api.sendMessage("‚ö†Ô∏è B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y", event.threadID, event.messageID);
        let threadID = event.threadID;
        if (args[1] == "all") {
            for (let id in data) {
                if (data[id].threadID == threadID) {
                    data[id].warns = 0;
                    delete data[id];
                }
            }
            fs.writeFileSync(path, JSON.stringify(data));
            return api.sendMessage("‚úÖ ƒê√£ ƒë·∫∑t l·∫°i s·ªë l·∫ßn c·∫£nh b√°o c·ªßa t·∫•t c·∫£ th√†nh vi√™n trong nh√≥m!", event.threadID, event.messageID);
        }
        else {
            let mention = Object.keys(event.mentions)[0];
            if (!mention) {
                if (event.type != "message_reply") return api.sendMessage("‚ùé Vui l√≤ng tag ho·∫∑c tr·∫£ l·ªùi tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng c·∫ßn ƒë·∫∑t l·∫°i s·ªë l·∫ßn c·∫£nh b√°o", event.threadID, event.messageID);
                else {
                    mention = event.messageReply.senderID;
                }
            }
            let name = (await Users.getData(mention)).name;
            if (data[mention]) {
                data[mention].warns = 0;
                delete data[mention];
                fs.writeFileSync(path, JSON.stringify(data));
                return api.sendMessage(`‚úÖ ƒê√£ ƒë·∫∑t l·∫°i s·ªë l·∫ßn c·∫£nh b√°o c·ªßa ${name}`, event.threadID, event.messageID);
            }
            else {
                return api.sendMessage(`‚ùé ${name} ch∆∞a b·ªã c·∫£nh b√°o l·∫ßn n√†o!`, event.threadID, event.messageID);
            }
        }
    }
    else {
        let mention = Object.keys(event.mentions)[0];
        let reason = args.slice(1).join(" ");
        if (!mention) {
            if (event.type != "message_reply") return api.sendMessage("‚ùé Vui l√≤ng tag ho·∫∑c tr·∫£ l·ªùi tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng c·∫ßn c·∫£nh b√°o", event.threadID, event.messageID);
            else {
                mention = event.messageReply.senderID;
                reason = args.join(" ");
            }
        }
        let name = (await Users.getData(mention)).name;
        if (!data[mention]) data[mention] = { "warns": 0, "reason": [] };
        data[mention].warns++;
        data[mention].threadID = event.threadID;
        data[mention].reason.push(reason || "Kh√¥ng c√≥");
        data[mention].time = `${new Date().toLocaleTimeString()} - ${new Date().toLocaleDateString()}`;
        fs.writeFileSync(path, JSON.stringify(data));
        let maxWarn = 3;
        if (data[mention].warns >= maxWarn) {
            api.removeUserFromGroup(mention, event.threadID);
            api.sendMessage(`‚úÖ ƒê√£ kick ${name} ra kh·ªèi nh√≥m v√¨ ƒë√£ b·ªã c·∫£nh b√°o ${maxWarn} l·∫ßn`, event.threadID, event.messageID);
            delete data[mention];
            fs.writeFileSync(path, JSON.stringify(data));
        }
        else {
            api.sendMessage(`‚õî ${name} ƒë√£ b·ªã c·∫£nh b√°o ${data[mention].warns} l·∫ßn, c√≤n ${maxWarn - data[mention].warns} l·∫ßn n·ªØa s·∫Ω b·ªã kick kh·ªèi nh√≥m!${reason ? `\nüìù L√≠ do: ${reason}` : ""}`, event.threadID, event.messageID);
        }
    }
};